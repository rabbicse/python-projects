import json
import os

# Bengali surah names mapping (surah number to Bengali name)
BENGALI_NAMES = {
    "1": "‡¶Ü‡¶≤-‡¶´‡¶æ‡¶§‡¶ø‡¶π‡¶æ",
    "2": "‡¶Ü‡¶≤-‡¶¨‡¶æ‡¶ï‡¶æ‡¶∞‡¶æ",
    "3": "‡¶Ü‡¶≤-‡¶á-‡¶á‡¶Æ‡¶∞‡¶æ‡¶®",
    "4": "‡¶Ü‡¶®-‡¶®‡¶ø‡¶∏‡¶æ",
    "5": "‡¶Ü‡¶≤-‡¶Æ‡¶æ‡¶Ø‡¶º‡¶ø‡¶¶‡¶æ‡¶π",
    "6": "‡¶Ü‡¶≤-‡¶Ü‡¶®'‡¶Ü‡¶Æ",
    "7": "‡¶Ü‡¶≤-‡¶Ü'‡¶∞‡¶æ‡¶´",
    "8": "‡¶Ü‡¶≤-‡¶Ü‡¶®‡¶´‡¶æ‡¶≤",
    "9": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶ì‡¶¨‡¶æ‡¶π",
    "10": "‡¶á‡¶â‡¶®‡ßÅ‡¶∏",
    "11": "‡¶π‡ßÅ‡¶¶",
    "12": "‡¶á‡¶â‡¶∏‡ßÅ‡¶´",
    "13": "‡¶Ü‡¶∞-‡¶∞‡¶æ‡¶¶",
    "14": "‡¶á‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡¶ø‡¶Æ",
    "15": "‡¶Ü‡¶≤-‡¶π‡¶ø‡¶ú‡¶∞",
    "16": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶π‡¶≤",
    "17": "‡¶Ü‡¶≤-‡¶á‡¶∏‡¶∞‡¶æ",
    "18": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶π‡¶´",
    "19": "‡¶Æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶Æ",
    "20": "‡¶§‡¶æ‡¶π‡¶æ",
    "21": "‡¶Ü‡¶≤-‡¶Ü‡¶Æ‡ßç‡¶¨‡¶ø‡¶Ø‡¶º‡¶æ",
    "22": "‡¶Ü‡¶≤-‡¶π‡¶æ‡¶ú‡ßç‡¶ú",
    "23": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶Æ‡¶ø‡¶®‡ßÅ‡¶®",
    "24": "‡¶Ü‡¶®-‡¶®‡ßÇ‡¶∞",
    "25": "‡¶Ü‡¶≤-‡¶´‡ßÅ‡¶∞‡¶ï‡¶æ‡¶®",
    "26": "‡¶Ü‡¶∂-‡¶∂‡ßÅ'‡¶Ü‡¶∞‡¶æ",
    "27": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶Æ‡¶≤",
    "28": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶∏‡¶æ‡¶∏",
    "29": "‡¶Ü‡¶≤-‡¶Ü‡¶®‡¶ï‡¶æ‡¶¨‡ßÅ‡¶§",
    "30": "‡¶Ü‡¶∞-‡¶∞‡ßÅ‡¶Æ",
    "31": "‡¶≤‡ßÅ‡¶ï‡¶Æ‡¶æ‡¶®",
    "32": "‡¶Ü‡¶∏-‡¶∏‡¶æ‡¶ú‡¶¶‡¶æ",
    "33": "‡¶Ü‡¶≤-‡¶Ü‡¶π‡¶Ø‡¶æ‡¶¨",
    "34": "‡¶∏‡¶æ‡¶¨‡¶æ",
    "35": "‡¶´‡¶æ‡¶§‡¶ø‡¶∞",
    "36": "‡¶á‡¶Ø‡¶º‡¶æ‡¶∏‡¶ø‡¶®",
    "37": "‡¶Ü‡¶∏-‡¶∏‡¶æ‡¶´‡¶´‡¶æ‡¶§",
    "38": "‡¶∏‡¶æ‡¶¶",
    "39": "‡¶Ü‡¶Ø-‡¶Ø‡ßÅ‡¶Æ‡¶æ‡¶∞",
    "40": "‡¶ó‡¶æ‡¶´‡¶ø‡¶∞",
    "41": "‡¶´‡ßÅ‡¶∏‡¶∏‡¶ø‡¶≤‡¶æ‡¶§",
    "42": "‡¶Ü‡¶∂-‡¶∂‡ßÅ‡¶∞‡¶æ",
    "43": "‡¶Ü‡¶Ø-‡¶Ø‡ßÅ‡¶ñ‡¶∞‡ßÅ‡¶´",
    "44": "‡¶Ü‡¶¶-‡¶¶‡ßÅ‡¶ñ‡¶æ‡¶®",
    "45": "‡¶Ü‡¶≤-‡¶ú‡¶æ‡¶∏‡¶ø‡¶Ø‡¶º‡¶æ‡¶π",
    "46": "‡¶Ü‡¶≤-‡¶Ü‡¶π‡¶ï‡¶æ‡¶´",
    "47": "‡¶Æ‡ßÅ‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶",
    "48": "‡¶Ü‡¶≤-‡¶´‡¶æ‡¶§‡¶π",
    "49": "‡¶Ü‡¶≤-‡¶π‡ßÅ‡¶ú‡ßÅ‡¶∞‡¶æ‡¶§",
    "50": "‡¶ï‡¶æ‡¶´",
    "51": "‡¶Ü‡¶Ø-‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶§",
    "52": "‡¶Ü‡¶§-‡¶§‡ßÅ‡¶∞",
    "53": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶ú‡¶Æ",
    "54": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶Æ‡¶æ‡¶∞",
    "55": "‡¶Ü‡¶∞-‡¶∞‡¶æ‡¶π‡¶Æ‡¶æ‡¶®",
    "56": "‡¶Ü‡¶≤-‡¶ì‡¶Ø‡¶º‡¶æ‡¶ï‡¶ø‡¶Ø‡¶º‡¶æ‡¶π",
    "57": "‡¶Ü‡¶≤-‡¶π‡¶æ‡¶¶‡¶ø‡¶¶",
    "58": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶ú‡¶æ‡¶¶‡¶ø‡¶≤‡¶æ‡¶π",
    "59": "‡¶Ü‡¶≤-‡¶π‡¶æ‡¶∂‡¶∞",
    "60": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶Æ‡¶§‡¶æ‡¶π‡¶æ‡¶®‡¶æ‡¶π",
    "61": "‡¶Ü‡¶∏-‡¶∏‡¶æ‡¶´",
    "62": "‡¶Ü‡¶≤-‡¶ú‡ßÅ‡¶Æ‡ßÅ'‡¶Ü‡¶π",
    "63": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶®‡¶æ‡¶´‡¶ø‡¶ï‡ßÅ‡¶®",
    "64": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶ó‡¶æ‡¶¨‡ßÅ‡¶®",
    "65": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶≤‡¶æ‡¶ï",
    "66": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶π‡¶∞‡¶ø‡¶Æ",
    "67": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶≤‡¶ï",
    "68": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶≤‡¶æ‡¶Æ",
    "69": "‡¶Ü‡¶≤-‡¶π‡¶æ‡¶ï‡ßç‡¶ï‡¶æ‡¶π",
    "70": "‡¶Ü‡¶≤-‡¶Æ‡¶æ'‡¶Ü‡¶∞‡¶ø‡¶ú",
    "71": "‡¶®‡ßÇ‡¶π",
    "72": "‡¶Ü‡¶≤-‡¶ú‡¶ø‡¶®",
    "73": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶ú‡¶æ‡¶Æ‡ßç‡¶Æ‡¶ø‡¶≤",
    "74": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶¶‡¶¶‡¶æ‡¶∏‡¶∏‡¶ø‡¶∞",
    "75": "‡¶Ü‡¶≤-‡¶ï‡¶ø‡¶Ø‡¶º‡¶æ‡¶Æ‡¶æ‡¶π",
    "76": "‡¶Ü‡¶≤-‡¶á‡¶®‡¶∏‡¶æ‡¶®",
    "77": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶∞‡¶∏‡¶æ‡¶≤‡¶æ‡¶§",
    "78": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶¨‡¶æ",
    "79": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶ú‡¶ø‡¶Ø‡¶º‡¶æ‡¶§",
    "80": "‡¶Ü‡¶¨‡¶æ‡¶∏‡¶æ",
    "81": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶ï‡¶≠‡ßÄ‡¶∞",
    "82": "‡¶Ü‡¶≤-‡¶á‡¶®‡¶´‡¶ø‡¶§‡¶æ‡¶∞",
    "83": "‡¶Ü‡¶≤-‡¶Æ‡ßÅ‡¶§‡¶æ‡¶´‡¶´‡¶ø‡¶´‡¶ø‡¶®",
    "84": "‡¶Ü‡¶≤-‡¶á‡¶®‡¶∂‡¶ø‡¶ï‡¶æ‡¶ï",
    "85": "‡¶Ü‡¶≤-‡¶¨‡ßÅ‡¶∞‡ßÅ‡¶ú",
    "86": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶∞‡¶ø‡¶ï",
    "87": "‡¶Ü‡¶≤-‡¶Ü'‡¶≤‡¶æ",
    "88": "‡¶Ü‡¶≤-‡¶ó‡¶æ‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶π",
    "89": "‡¶Ü‡¶≤-‡¶´‡¶æ‡¶ú‡¶∞",
    "90": "‡¶Ü‡¶≤-‡¶¨‡¶æ‡¶≤‡¶æ‡¶¶",
    "91": "‡¶Ü‡¶∂-‡¶∂‡¶æ‡¶Æ‡¶∏",
    "92": "‡¶Ü‡¶≤-‡¶≤‡¶æ‡¶á‡¶≤",
    "93": "‡¶Ü‡¶¶-‡¶¶‡ßÅ‡¶π‡¶æ",
    "94": "‡¶Ü‡¶≤-‡¶∂‡¶æ‡¶∞‡¶π",
    "95": "‡¶Ü‡¶§-‡¶§‡¶ø‡¶®",
    "96": "‡¶Ü‡¶≤-‡¶Ü‡¶≤‡¶æ‡¶ï",
    "97": "‡¶Ü‡¶≤-‡¶ï‡¶¶‡¶∞",
    "98": "‡¶Ü‡¶≤-‡¶¨‡¶æ‡¶á‡¶Ø‡¶º‡¶ø‡¶®‡¶æ‡¶π",
    "99": "‡¶Ü‡¶Ø-‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶æ‡¶≤‡¶æ‡¶π",
    "100": "‡¶Ü‡¶≤-‡¶Ü‡¶¶‡¶ø‡¶Ø‡¶º‡¶æ‡¶§",
    "101": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶π",
    "102": "‡¶Ü‡¶§-‡¶§‡¶æ‡¶ï‡¶æ‡¶∏‡ßÅ‡¶∞",
    "103": "‡¶Ü‡¶≤-‡¶Ü‡¶∏‡¶∞",
    "104": "‡¶Ü‡¶≤-‡¶π‡ßÅ‡¶Æ‡¶æ‡¶ú‡¶æ‡¶π",
    "105": "‡¶Ü‡¶≤-‡¶´‡ßÄ‡¶≤",
    "106": "‡¶ï‡ßÅ‡¶∞‡¶æ‡¶á‡¶∂",
    "107": "‡¶Ü‡¶≤-‡¶Æ‡¶æ‡¶â‡¶®",
    "108": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞",
    "109": "‡¶Ü‡¶≤-‡¶ï‡¶æ‡¶´‡¶ø‡¶∞‡ßÅ‡¶®",
    "110": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶∏‡¶∞",
    "111": "‡¶Ü‡¶≤-‡¶Æ‡¶æ‡¶∏‡¶æ‡¶¶",
    "112": "‡¶Ü‡¶≤-‡¶á‡¶ñ‡¶≤‡¶æ‡¶∏",
    "113": "‡¶Ü‡¶≤-‡¶´‡¶æ‡¶≤‡¶æ‡¶ï",
    "114": "‡¶Ü‡¶®-‡¶®‡¶æ‡¶∏"
}

# Wikipedia URLs
WIKI_URLS = {
    "en": "https://en.wikipedia.org/wiki/List_of_chapters_in_the_Quran",
    "bn": "https://bn.wikipedia.org/wiki/%E0%A6%95%E0%A7%81%E0%A6%B0%E0%A6%86%E0%A6%A8%E0%A7%87%E0%A6%B0_%E0%A6%B8%E0%A7%82%E0%A6%B0%E0%A6%BE%E0%A6%B0_%E0%A6%A4%E0%A6%BE%E0%A6%B2%E0%A6%BF%E0%A6%95%E0%A6%BE"
}


def load_surah_data(json_file_path):
    """Load surah data from JSON file"""
    with open(json_file_path, 'r', encoding='utf-8') as file:
        return json.load(file)


def generate_markdown(surah_data, surah_number, surah_info=None):
    """Generate markdown content for a surah"""
    surah_en = surah_data["en"][str(surah_number)]
    surah_ar = surah_data["ar"][str(surah_number)]

    # Get Bengali name
    bengali_name = BENGALI_NAMES.get(str(surah_number), "")

    # Format title with Bengali
    title = f"{surah_number}. Surah {surah_en['transliteratedName']} | {surah_ar['transliteratedName']} | {bengali_name}"

    # Format description
    description = f"‚ú® Surah {surah_en['transliteratedName']} - {surah_en['translatedName']}\n\n"
    description += "Listen, learn, and reflect on each word.\n\n"
    description += "Understand Allah's guidance, mercy, and blessings through this short word-by-word recitation.\n\n"
    description += f"üéµ Recitation: Mishari Rashid al-`Afasy - https://quran.com/reciters/7\n"
    description += "Source: https://quran.com/\n"
    description += "All rights to the recitation belong to the respective copyright holders.\n\n"
    description += "üåô Du'a: May Allah guide us to His light. Ameen.\n\n"
    description += "üîî Subscribe for more Qur'an recitations and Islamic reminders!\n\n"

    # Add hashtags
    hashtags = [
        f"#surah{surah_en['slug'].replace('-','')}",
        "#holyquran",
        "#quranrecitation",
        "#tilawat",
        "#beautifulrecitation",
        f"#surah{surah_number}",
        "#soothingquran",
        "#quranhealing",
        "#quranwithtajweed",
        "#heartsoothingquran",
        "#islamicreminders",
        "#listenquran",
        "#dailyquran",
        "#peacefulrecitation",
        "#quranshorts",
        "#healingquran",
        "#islamicvideo",
        "#islamicvideos"
    ]

    description += " ".join(hashtags)

    # Add surah info if available
    if surah_info:
        description += f"\n\n## About this Surah\n\n"
        description += f"**Name**: {surah_info.get('surah_name', 'N/A')}\n\n"
        description += f"**Number of Verses**: {surah_info.get('ayah_count', 'N/A')}\n\n"
        description += f"**Revelation Place**: {surah_info.get('revelation_place', 'N/A')}\n\n"
        description += f"**Description**: {surah_info.get('description', 'N/A')}\n\n"

    return title, description


def main():
    # Load your surah data
    surah_data = load_surah_data('quran/chapters.json')  # Replace with your JSON file path

    # Create output directory if it doesn't exist
    os.makedirs('surah_descriptions', exist_ok=True)

    # Process each surah
    for surah_number in range(1, 115):  # 1 to 114
        try:
            # Try to load additional surah info if available
            surah_info_path = f'surah_info/{surah_number}.json'
            surah_info = None
            if os.path.exists(surah_info_path):
                with open(surah_info_path, 'r', encoding='utf-8') as f:
                    surah_info = json.load(f).get('surah_info', {})

            # Generate markdown content
            title, description = generate_markdown(surah_data, surah_number, surah_info)

            # Save to file
            filename = f"surah_descriptions/{surah_number:03d}_{surah_data['en'][str(surah_number)]['slug']}.md"
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(f"# {title}\n\n")
                f.write(description)

            print(f"Generated: {filename}")

        except Exception as e:
            print(f"Error processing surah {surah_number}: {e}")


if __name__ == "__main__":
    main()